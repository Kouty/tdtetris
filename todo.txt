Tetris
- A tetromino spawns at the top of the playfield, in the middle column
- The upper most 2 rows are not visible to the player
- Tetromino can rotate, and it can move down, left and right
- When a tetromino reaches the bottom it is locked, and a new random tetromino spawns
- When a row is filled of pieces of locked tetrominoes, it gets deleted
- Game ends when a tetromino cannot spawn without colliding with locked tetromino pieces

TODO:
- Index.ts needs refactor, long pieces of code are not under test*
-- IArea could be computed by tetris class (or playfield), and put under tests.

- IPlacedTetromino should have a convenient method to tell if a cell is filled
- Add other tetrominoes
- Add rotation system
- Get rid of test warnings
- Garbage area should use tetromino color, instead of grey

DONE:
- Don't use square word, use cell instead
- IPlacedTetromino should consider its coordinates when returning filled cells
- Add timed down movement

CONSIDERATIONS:
- spawn is influenced by the rotation system
- there are 2 hidden rows at the top of the playfield
- Make clear algorithm (naive, or sticky) pluggable.
- Study and decide which game over conditions will be implemented
- Score system
- Other tetrominoes
- Random tetromino spawn
- Tetromino preview box
